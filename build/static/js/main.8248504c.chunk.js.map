{"version":3,"sources":["components/Button.jsx","components/UserContext.js","components/Input.jsx","components/Navbar.jsx","App.js","Login.js","Register.js","Logout.js","About.js","Profile.js","CreatePost.js","AppRouter.js","index.js"],"names":["Button","state","circles","circleCount","timers","circleEffect","e","preventDefault","x","clientX","target","offsetLeft","y","clientY","offsetTop","push","setState","timer","setTimeout","filtered","filter","circle","clearTimeout","this","forEach","props","label","handleClick","disabled","rest","onClick","map","style","left","top","React","Component","UserContext","createContext","Input","onChange","value","className","autoComplete","placeholder","type","name","id","htmlFor","faunadb","query","ContainsStr","Documents","Map","Ref","LowerCase","Or","Filter","Paginate","Get","Match","CurrentIdentity","Select","Index","Lambda","Create","Var","Collection","Join","Call","Navbar","Function","username","picture","searchValue","searchResults","handleSearch","context","user","setUser","Client","secret","domain","scheme","then","returns","console","log","data","catch","error","localUser","localStorage","getItem","foundUser","to","length","result","index","href","src","alt","contextType","App","useContext","useEffect","Exists","FaunaLogin","Login","password","loginFailed","redir","updateUsername","updatePassword","formSubmit","client","indexOf","response","setItem","err","replace","role","equalTo","ref","msg","test","exclusive","message","params","reference","path","resolve","Register","email","repeat_password","errors","checkButtonDisability","disable","schema","validate","abortEarly","validateUsername","validateAt","strict","answer","updateEmail","validateEmail","updateRepeat","mapErrors","toUpperCase","slice","credentials","posts","yup","shape","matches","min","max","required","Logout","navigate","useNavigate","clear","About","Profile","userId","useParams","useState","setUsername","setPicture","setPosts","userExists","setUserExistance","post","title","image","content","mapPosts","Let","Update","Append","CreatePost","setTitle","setImage","text","setText","width","owner","returning","doc","array","AppRouter","providerValue","useMemo","Provider","element","exact","exactly","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8248504c.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\r\nimport { useState } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\n\r\nclass Button extends React.Component {\r\n  state = {\r\n    circles: [],\r\n    circleCount: 0,\r\n    timers: [],\r\n  };\r\n\r\n  circleEffect = e => {\r\n    e.preventDefault();\r\n    const x = e.clientX - e.target.offsetLeft;\r\n    const y = e.clientY - e.target.offsetTop;\r\n    let circles = this.state.circles;\r\n    const circleCount = this.state.circleCount + 1;\r\n    circles.push({ x, y, circleCount });\r\n    this.setState({ circles, circleCount });\r\n\r\n    const timer = setTimeout(() => {\r\n      circles = this.state.circles;\r\n      let filtered = 0;\r\n      circles = circles.filter(circle => {\r\n        if (circle.x != x || circle.y != y || filtered > 0) {\r\n          return true;\r\n        }\r\n        filtered++;\r\n        return false;\r\n      });\r\n      this.setState({ circles });\r\n      clearTimeout(timer);\r\n    }, 1000);\r\n\r\n    const timers = this.state.timers;\r\n    timers.push(timer);\r\n    this.setState({ timer });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.state.timers.forEach(timer => {\r\n      clearTimeout(timer);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { label, handleClick, disabled, ...rest } = this.props;\r\n    return (\r\n      <button\r\n        disabled={disabled}\r\n        {...rest}\r\n        onClick={e => {\r\n          e.preventDefault();\r\n          this.circleEffect(e);\r\n          handleClick(e);\r\n        }}\r\n      >\r\n        {label}\r\n        {this.state.circles &&\r\n          this.state.circles.map(circle => {\r\n            return (\r\n              <span\r\n                key={circle.circleCount}\r\n                style={{ left: circle.x + \"px\", top: circle.y + \"px\" }}\r\n              >\r\n                3\r\n              </span>\r\n            );\r\n          })}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import { createContext } from \"react\";\r\n\r\nexport const UserContext = createContext();\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Input extends React.Component {\r\n  render() {\r\n    const { label, onChange, value, className, ...rest } = this.props;\r\n\r\n    return (\r\n      <div className=\"input-group\">\r\n        <input\r\n          autoComplete=\"off\"\r\n          placeholder=\" \"\r\n          onChange={onChange}\r\n          value={value}\r\n          type=\"text\"\r\n          name={label}\r\n          id={label}\r\n          aria-label={label}\r\n          className={className ? className : \"\"}\r\n          {...rest}\r\n        />\r\n        <label htmlFor={label}>{label}</label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nInput.propTypes = {\r\n  label: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.string,\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport faunadb from \"faunadb\";\r\nimport Input from \"./Input\";\r\n\r\n// FQL functions\r\nconst {\r\n  Documents,\r\n  Map,\r\n  Ref,\r\n  ContainsStr,\r\n  LowerCase,\r\n  Or,\r\n  Filter,\r\n  Paginate,\r\n  Get,\r\n  Match,\r\n  CurrentIdentity,\r\n  Select,\r\n  Index,\r\n  Create,\r\n  Lambda,\r\n  Collection,\r\n  Join,\r\n  Call,\r\n  Var,\r\n  Function: Fn,\r\n} = faunadb.query;\r\n\r\nclass Navbar extends React.Component {\r\n  static contextType = UserContext;\r\n\r\n  state = {\r\n    username: \"\",\r\n    picture: \"\",\r\n    searchValue: \"\",\r\n    searchResults: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { user, setUser } = this.context;\r\n    if (!user) {\r\n      const localUser = localStorage.getItem(\"user\");\r\n      if (localUser) {\r\n        const foundUser = localUser;\r\n        setUser(foundUser);\r\n\r\n        var client = new faunadb.Client({\r\n          secret: foundUser,\r\n          domain: \"db.eu.fauna.com\",\r\n          scheme: \"https\",\r\n        });\r\n\r\n        client.query(Select([\"data\"], Get(CurrentIdentity()))).then(returns => {\r\n          this.setState({ username: returns.username });\r\n          this.setState({ picture: returns.picture });\r\n        });\r\n      }\r\n    } else {\r\n      const client = new faunadb.Client({\r\n        secret: user,\r\n        domain: \"db.eu.fauna.com\",\r\n        scheme: \"https\",\r\n      });\r\n      client.query(Select([\"data\"], Get(CurrentIdentity()))).then(returns => {\r\n        this.setState({ username: returns.username });\r\n        this.setState({ picture: returns.picture });\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSearch = e => {\r\n    const { user, setUser } = this.context;\r\n    const searchValue = e.target.value;\r\n    this.setState({ searchValue });\r\n\r\n    if (user && searchValue) {\r\n      const client = new faunadb.Client({\r\n        secret: user,\r\n        domain: \"db.eu.fauna.com\",\r\n        scheme: \"https\",\r\n      });\r\n\r\n      client\r\n        .query(\r\n          Filter(\r\n            Paginate(Match(Index(\"users_and_names\"))),\r\n            Lambda(\r\n              [\"username\", \"picture\", \"ref\"],\r\n              Or(\r\n                ContainsStr(Var(\"username\"), searchValue),\r\n                ContainsStr(LowerCase(Var(\"username\")), LowerCase(searchValue))\r\n              )\r\n            )\r\n          )\r\n        )\r\n        .then(returns => {\r\n          console.log(returns);\r\n          const searchResults = returns.data;\r\n          this.setState({ searchResults });\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { user, setUser } = this.context;\r\n    const {} = this.props;\r\n\r\n    if (user) {\r\n      return (\r\n        <div className=\"navbar\">\r\n          <NavLink className={\"nav-link\"} to={\"/home\"}>\r\n            Home\r\n          </NavLink>\r\n          <NavLink className={\"nav-link\"} to={\"/create\"}>\r\n            Create\r\n          </NavLink>\r\n          <div\r\n            className={\r\n              \"search-container \" + (this.state.searchValue ? \"\" : \"empty\")\r\n            }\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search For User\"\r\n              value={this.state.searchValue}\r\n              onChange={this.handleSearch}\r\n            />\r\n            <ul className=\"\">\r\n              {!this.state.searchResults.length ? (\r\n                <li>No search results found</li>\r\n              ) : (\r\n                this.state.searchResults.map((result, index) => (\r\n                  <li key={index}>\r\n                    <a href={\"/profile/\" + result[2].value.id}>{result[0]}</a>\r\n                  </li>\r\n                ))\r\n              )}\r\n            </ul>\r\n          </div>\r\n          <NavLink className={\"nav-link right nav-profile\"} to={\"/profile\"}>\r\n            {this.state.username ? <span>{this.state.username}</span> : \"\"}\r\n            {this.state.picture ? <img src={this.state.picture} alt=\"\" /> : \"\"}\r\n          </NavLink>\r\n          <NavLink className={\"nav-link right\"} to={\"/logout\"}>\r\n            Logout\r\n          </NavLink>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"navbar\">\r\n        <NavLink className={\"nav-link\"} to={\"/home\"}>\r\n          Home\r\n        </NavLink>\r\n\r\n        <NavLink className={\"nav-link right\"} to={\"/login\"}>\r\n          Login\r\n        </NavLink>\r\n        <NavLink className={\"nav-link right\"} to={\"/register\"}>\r\n          Register\r\n        </NavLink>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n\r\n/* <Nav.Text\r\n                      key={pageName}\r\n                      active={activePage == pageName ? \"active\" : \"\"}\r\n                    >\r\n                      <Link aria-current=\"page\" to={pageName}>\r\n                        {pageName}\r\n                      </Link>\r\n                    </Nav.Text>*/\r\n","import { useContext, useEffect } from \"react\";\nimport Button from \"./components/Button\";\nimport { UserContext } from \"./components/UserContext\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport faunadb from \"faunadb\";\n\n// FQL functions\nconst {\n  Documents,\n  Map,\n  Ref,\n  Paginate,\n  Get,\n  Match,\n  Select,\n  Index,\n  Create,\n  Lambda,\n  Collection,\n  Join,\n  Call,\n  Function: Fn,\n} = faunadb.query;\n\nfunction App() {\n  /* const client = new faunadb.Client({\n    secret: \"fnAEaVN499AAxYFnDn6Xh4GZ9c3qVw7a-OEhZ-rF\",\n    domain: \"db.eu.fauna.com\",\n    scheme: \"https\",\n  }); */\n  const { user, setUser } = useContext(UserContext);\n\n  useEffect(() => {\n    if (!user) {\n      const localUser = localStorage.getItem(\"user\");\n      if (localUser) {\n        const foundUser = localUser;\n        setUser(foundUser);\n      }\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {user ? (\n        <div>You are signed with key: {user}</div>\n      ) : (\n        <div>You aren't logged in!</div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useContext } from \"react\";\r\nimport Input from \"./components/Input\";\r\nimport Joi from \"joi\";\r\nimport * as yup from \"yup\";\r\nimport Button from \"./components/Button\";\r\nimport faunadb from \"faunadb\";\r\nimport { Link, Navigate } from \"react-router-dom\";\r\nimport { UserContext } from \"./components/UserContext\";\r\nconst {\r\n  Documents,\r\n  Map,\r\n  Ref,\r\n  Paginate,\r\n  Get,\r\n  Exists,\r\n  Match,\r\n  Select,\r\n  Index,\r\n  Create,\r\n  Lambda,\r\n  Collection,\r\n  Join,\r\n  Login: FaunaLogin,\r\n  Call,\r\n  Function: Fn,\r\n} = faunadb.query;\r\n\r\nclass Login extends React.Component {\r\n  static contextType = UserContext;\r\n\r\n  state = {\r\n    data: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    loginFailed: \"\",\r\n    redir: false,\r\n  };\r\n\r\n  updateUsername = e => {\r\n    const data = { ...this.state.data };\r\n    const username = e.target.value;\r\n    data.username = username;\r\n    this.setState({ data });\r\n  };\r\n\r\n  updatePassword = e => {\r\n    const data = { ...this.state.data };\r\n    const password = e.target.value;\r\n    data.password = password;\r\n    this.setState({ data });\r\n  };\r\n\r\n  formSubmit = e => {\r\n    console.log(this.context);\r\n    e.preventDefault();\r\n    console.log(\"Trying to log in\");\r\n    const { username, password } = this.state.data;\r\n    const client = new faunadb.Client({\r\n      secret: \"fnAEaWbgzoAAwyZTDq94vnfSjZm27pfo9meEZH29\",\r\n      domain: \"db.eu.fauna.com\",\r\n      scheme: \"https\",\r\n    });\r\n    let query = \"\";\r\n    if (username.indexOf(\"@\") == -1) {\r\n      //Log in using username\r\n      console.log(\"Logging in using USERNAME\");\r\n      query = FaunaLogin(Match(Index(\"users_by_username\"), username), {\r\n        password,\r\n      });\r\n    } else {\r\n      //Log in using email\r\n      console.log(\"Logging in using EMAIL\");\r\n      query = FaunaLogin(Match(Index(\"users_by_email\"), username), {\r\n        password,\r\n      });\r\n    }\r\n\r\n    client\r\n      .query(query)\r\n      .then(response => {\r\n        console.log(response);\r\n        const { user, setUser } = this.context;\r\n        setUser(response.secret);\r\n        localStorage.setItem(\"user\", response.secret);\r\n        this.setState({ redir: true });\r\n      })\r\n      .catch(err => {\r\n        this.setState({ loginFailed: \"Invalid Login\" });\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.context;\r\n    return (\r\n      <>\r\n        {this.state.redir ? (\r\n          <Navigate to=\"/\" replace={true} />\r\n        ) : (\r\n          <div id=\"login_account\">\r\n            <h1>Login To An Account! {user}</h1>\r\n            <div className=\"form-container\">\r\n              <form>\r\n                {this.state.loginFailed && (\r\n                  <div className=\"field-validation-error\" role=\"alert\">\r\n                    {this.state.loginFailed}\r\n                  </div>\r\n                )}\r\n                <br />\r\n                <Input\r\n                  value={this.state.data.username}\r\n                  label=\"Username\"\r\n                  onChange={this.updateUsername}\r\n                />\r\n                <br />\r\n                <Input\r\n                  type=\"password\"\r\n                  value={this.state.data.password}\r\n                  label=\"Password\"\r\n                  onChange={this.updatePassword}\r\n                />\r\n                <br />\r\n                <Button\r\n                  disabled={this.state.data.disabled}\r\n                  label=\"Login\"\r\n                  handleClick={this.formSubmit}\r\n                />\r\n                <br />\r\n                <Link to=\"/register\">Register</Link>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport Input from \"./components/Input\";\r\nimport Joi from \"joi\";\r\nimport * as yup from \"yup\";\r\nimport Button from \"./components/Button\";\r\nimport faunadb, { Login } from \"faunadb\";\r\nimport { Link, Navigate } from \"react-router-dom\";\r\nimport { UserContext } from \"./components/UserContext\";\r\nconst {\r\n  Documents,\r\n  Map,\r\n  Ref,\r\n  Paginate,\r\n  Get,\r\n  Exists,\r\n  Match,\r\n  Select,\r\n  Index,\r\n  Create,\r\n  Lambda,\r\n  Collection,\r\n  Join,\r\n  Call,\r\n  Function: Fn,\r\n} = faunadb.query;\r\n\r\nfunction equalTo(ref, msg) {\r\n  console.log(ref, msg);\r\n  return this.test({\r\n    name: \"equalTo\",\r\n    exclusive: false,\r\n    message: msg || \"${path} must be the same as ${reference}\",\r\n    params: {\r\n      reference: ref.path,\r\n    },\r\n    test: function (value) {\r\n      return value === this.resolve(ref);\r\n    },\r\n  });\r\n}\r\n\r\nclass Register extends React.Component {\r\n  static contextType = UserContext;\r\n  state = {\r\n    data: {\r\n      username: \"\",\r\n      email: \"\",\r\n      disabled: true,\r\n      password: \"\",\r\n      repeat_password: \"\",\r\n    },\r\n    redir: false,\r\n    errors: { username: [], email: [], password: [], repeat_password: [] },\r\n  };\r\n\r\n  componentDidMount() {\r\n    yup.addMethod(yup.string, \"equalTo\", equalTo);\r\n\r\n    this.schema = yup.object().shape({\r\n      username: yup\r\n        .string()\r\n        .matches(\r\n          \"^[a-zA-Z0-9_]*$\",\r\n          \"Username must only be the symbols A-Z and 0-9\"\r\n        )\r\n        .min(3)\r\n        .max(30)\r\n        .required(),\r\n      email: yup.string().email().required(),\r\n      password: yup\r\n        .string()\r\n        .matches(\"^[a-zA-Z0-9_]*$\")\r\n        .min(8)\r\n        .max(30)\r\n        .required(),\r\n      repeat_password: yup.string().equalTo(yup.ref(\"password\")),\r\n    });\r\n  }\r\n  checkButtonDisability = () => {\r\n    const data = this.state.data;\r\n    delete data.disabled;\r\n    let disable = false;\r\n\r\n    if (\r\n      this.state.errors.username[0] ||\r\n      this.state.errors.email[0] ||\r\n      this.state.errors.password[0] ||\r\n      this.state.errors.repeat_password[0]\r\n    ) {\r\n      disable = true;\r\n    }\r\n\r\n    this.schema\r\n      .validate(this.state.data, { abortEarly: true })\r\n      .catch(error => {\r\n        disable = true;\r\n      })\r\n      .then(() => {\r\n        data.disabled = disable;\r\n        this.setState({ data });\r\n      });\r\n  };\r\n\r\n  updateUsername = e => {\r\n    const data = { ...this.state.data };\r\n    const username = e.target.value;\r\n    data.username = username;\r\n    this.setState({ data }, this.validateUsername);\r\n  };\r\n\r\n  validateUsername = () => {\r\n    const errors = this.state.errors;\r\n    const username = this.state.data.username;\r\n    errors.username = [];\r\n    this.schema\r\n      .validateAt(\"username\", { username }, { abortEarly: false, strict: true })\r\n      .catch(error => {\r\n        errors.username = error.errors;\r\n      });\r\n    const client = new faunadb.Client({\r\n      secret: \"fnAEaWbgzoAAwyZTDq94vnfSjZm27pfo9meEZH29\",\r\n      domain: \"db.eu.fauna.com\",\r\n      scheme: \"https\",\r\n    });\r\n\r\n    const query = Exists(Match(Index(\"users_by_username\"), username));\r\n    client.query(query).then(answer => {\r\n      if (answer) {\r\n        errors.username.push(\"User with that username already exists\");\r\n      }\r\n      this.setState({ errors });\r\n      this.checkButtonDisability();\r\n    });\r\n  };\r\n\r\n  updateEmail = e => {\r\n    const data = { ...this.state.data };\r\n    const email = e.target.value;\r\n    data.email = email;\r\n    this.setState({ data }, this.validateEmail);\r\n  };\r\n\r\n  validateEmail = () => {\r\n    const errors = this.state.errors;\r\n    const email = this.state.data.email;\r\n    errors.email = [];\r\n    this.schema\r\n      .validateAt(\"email\", { email }, { abortEarly: false, strict: true })\r\n      .catch(error => {\r\n        errors.email = error.errors;\r\n      });\r\n    const client = new faunadb.Client({\r\n      secret: \"fnAEaWbgzoAAwyZTDq94vnfSjZm27pfo9meEZH29\",\r\n      domain: \"db.eu.fauna.com\",\r\n      scheme: \"https\",\r\n    });\r\n\r\n    const query = Exists(Match(Index(\"users_by_email\"), email));\r\n    client.query(query).then(answer => {\r\n      if (answer) {\r\n        errors.email.push(\"User with that email already exists\");\r\n      }\r\n      this.setState({ errors });\r\n      this.checkButtonDisability();\r\n    });\r\n  };\r\n\r\n  updatePassword = e => {\r\n    const data = { ...this.state.data };\r\n    const password = e.target.value;\r\n    const errors = this.state.errors;\r\n    errors.password = [];\r\n    data.password = password;\r\n    this.schema\r\n      .validateAt(\"password\", { password }, { abortEarly: false, strict: true })\r\n      .catch(error => {\r\n        errors.password = error.errors;\r\n        this.setState({ errors }, this.checkButtonDisability);\r\n      });\r\n\r\n    this.setState({ data }, this.checkButtonDisability);\r\n  };\r\n\r\n  updateRepeat = e => {\r\n    const data = { ...this.state.data };\r\n    const repeat_password = e.target.value;\r\n    const password = this.state.data.password;\r\n    const errors = this.state.errors;\r\n    errors.repeat_password = [];\r\n    data.repeat_password = repeat_password;\r\n    this.schema\r\n      .validateAt(\r\n        \"repeat_password\",\r\n        { password, repeat_password },\r\n        { abortEarly: true, strict: true }\r\n      )\r\n      .catch(error => {\r\n        errors.repeat_password = error.errors;\r\n        this.setState({ errors }, this.checkButtonDisability);\r\n      });\r\n    this.setState({ data }, this.checkButtonDisability);\r\n  };\r\n\r\n  mapErrors = (errors, name) => {\r\n    return (\r\n      <div className=\"field-validation-error\" role=\"alert\">\r\n        {errors.map(error => (\r\n          <div key={error}>{error[0].toUpperCase() + error.slice(1)}</div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  formSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(\"Hello\");\r\n    const { username, password, email } = this.state.data;\r\n    const client = new faunadb.Client({\r\n      secret: \"fnAEaWbgzoAAwyZTDq94vnfSjZm27pfo9meEZH29\",\r\n      domain: \"db.eu.fauna.com\",\r\n      scheme: \"https\",\r\n    });\r\n    // FQL functions\r\n\r\n    let query = Create(Collection(\"users\"), {\r\n      credentials: { password },\r\n      data: {\r\n        username,\r\n        email,\r\n        picture:\r\n          \"https://cdn.pixabay.com/photo/2015/07/21/15/32/drawing-854034_960_720.png\",\r\n        posts: [],\r\n      },\r\n    });\r\n    try {\r\n      client.query(query).then(() => {\r\n        query = Login(Match(Index(\"users_by_username\"), username), {\r\n          password,\r\n        });\r\n        client.query(query).then(response => {\r\n          const { user, setUser } = this.context;\r\n          setUser(response.secret);\r\n          localStorage.setItem(\"user\", response.secret);\r\n          this.setState({ redir: true });\r\n        });\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n    //Send query via client\r\n  };\r\n\r\n  render() {\r\n    const { redir } = this.state;\r\n    return (\r\n      <div id=\"register_account\">\r\n        {redir && <Navigate replace={true} to={\"/\"} />}\r\n        <h1>Register An Account!</h1>\r\n        <form>\r\n          <Input\r\n            value={this.state.data.username}\r\n            label=\"Username\"\r\n            onChange={this.updateUsername}\r\n          />\r\n          <br />\r\n          {this.state.errors.username.length > 0 &&\r\n            this.mapErrors(this.state.errors.username, \"Username\")}\r\n          <br />\r\n          <Input\r\n            autoComplete=\"off\"\r\n            value={this.state.data.email}\r\n            label=\"Email\"\r\n            onChange={this.updateEmail}\r\n          />\r\n          <br />\r\n          {this.state.errors.email.length > 0 &&\r\n            this.mapErrors(this.state.errors.email, \"Email\")}\r\n          <br />\r\n          <Input\r\n            type=\"password\"\r\n            value={this.state.data.password}\r\n            label=\"Password\"\r\n            onChange={this.updatePassword}\r\n          />\r\n          <br />\r\n          {this.state.errors.password.length > 0 &&\r\n            this.mapErrors(this.state.errors.password, \"Password\")}\r\n          <br />\r\n          <Input\r\n            type=\"password\"\r\n            value={this.state.data.repeat_password}\r\n            label=\"Repeat Password\"\r\n            onChange={this.updateRepeat}\r\n          />\r\n          <br />\r\n          {this.state.errors.repeat_password.length > 0 && (\r\n            <div className=\"field-validation-error\" role=\"alert\">\r\n              Passwords have to match\r\n            </div>\r\n          )}\r\n          <br />\r\n          <Button\r\n            disabled={this.state.data.disabled}\r\n            label=\"Create the account\"\r\n            handleClick={this.formSubmit}\r\n          />\r\n          <br />\r\n          <Link to={\"/login\"}>Login</Link>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { useContext } from \"react\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport { UserContext } from \"./components/UserContext\";\r\nimport Button from \"./components/Button\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\nfunction Logout() {\r\n  const { user, setUser } = useContext(UserContext);\r\n  const navigate = useNavigate();\r\n\r\n  const handleClick = () => {\r\n    setUser();\r\n    localStorage.clear();\r\n\r\n    navigate(\"/\", { replace: true });\r\n  };\r\n\r\n  return (\r\n    <div id=\"logout\">\r\n      <Button handleClick={handleClick} label=\"Logout\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logout;\r\n","import React from \"react\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\nfunction About() {\r\n  return <div id=\"about\"></div>;\r\n}\r\n\r\nexport default About;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { UserContext } from \"./components/UserContext\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport faunadb from \"faunadb\";\r\n\r\n// FQL functions\r\nconst {\r\n  Documents,\r\n  Map,\r\n  Ref,\r\n  Paginate,\r\n  Get,\r\n  Match,\r\n  CurrentIdentity,\r\n  Select,\r\n  Index,\r\n  Create,\r\n  Lambda,\r\n  Collection,\r\n  Join,\r\n  Call,\r\n  Var,\r\n  Function: Fn,\r\n} = faunadb.query;\r\n\r\nfunction Profile() {\r\n  const navigate = useNavigate();\r\n  const { userId } = useParams();\r\n  const { user, setUser } = useContext(UserContext);\r\n  const [username, setUsername] = useState(\"Loading...\");\r\n  const [picture, setPicture] = useState(\"\");\r\n  const [posts, setPosts] = useState(\"\");\r\n  const [userExists, setUserExistance] = useState(true);\r\n\r\n  useEffect(() => {\r\n    var client = new faunadb.Client({\r\n      secret: user,\r\n      domain: \"db.eu.fauna.com\",\r\n      scheme: \"https\",\r\n    });\r\n    console.log(userId);\r\n    if (!user) {\r\n      const localUser = localStorage.getItem(\"user\");\r\n      if (localUser) {\r\n        const foundUser = localUser;\r\n        setUser(foundUser);\r\n      } else {\r\n        navigate(\"/\", { replace: true });\r\n      }\r\n    } else {\r\n      client\r\n        .query(\r\n          Select(\r\n            [\"data\"],\r\n            Get(userId ? Ref(Collection(\"users\"), userId) : CurrentIdentity())\r\n          )\r\n        )\r\n        .then(returns => {\r\n          setUsername(returns.username);\r\n          setPicture(returns.picture);\r\n          client\r\n            .query(Map(returns.posts, Lambda(\"X\", Get(Var(\"X\")))))\r\n            .then(posts => {\r\n              setPosts(posts);\r\n              console.log(posts);\r\n            });\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          setUserExistance(false);\r\n        });\r\n    }\r\n  }, [user]);\r\n\r\n  const mapPosts = posts => {\r\n    console.log(posts);\r\n    return posts.length > 0\r\n      ? posts.map((post, index) => (\r\n          <div className=\"post\" key={index}>\r\n            <h3>{post.data.title}</h3>\r\n            <img src={post.data.image} />\r\n            <div>{post.data.content}</div>\r\n          </div>\r\n        ))\r\n      : \"No Posts Found!\";\r\n  };\r\n\r\n  return (\r\n    <div id=\"profile\">\r\n      {userExists ? (\r\n        <>\r\n          <div className=\"profile-container\">\r\n            <div className=\"picture\">\r\n              <img src={picture} alt=\"\" />\r\n            </div>\r\n            <div className=\"username\">{username}</div>\r\n          </div>\r\n          <div id=\"myposts\">\r\n            <h2>Posts</h2>\r\n            {posts ? mapPosts(posts) : \"Loading...\"}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <h1>Profile not found!</h1>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { UserContext } from \"./components/UserContext\";\r\nimport Input from \"./components/Input\";\r\nimport Button from \"./components/Button\";\r\nimport faunadb from \"faunadb\";\r\n\r\n// FQL functions\r\nconst {\r\n  Documents,\r\n  Map,\r\n  Ref,\r\n  Paginate,\r\n  Get,\r\n  Let,\r\n  Update,\r\n  Append,\r\n  Match,\r\n  CurrentIdentity,\r\n  Select,\r\n  Index,\r\n  Create,\r\n  Lambda,\r\n  Collection,\r\n  Join,\r\n  Call,\r\n  Var,\r\n  Function: Fn,\r\n} = faunadb.query;\r\n\r\nfunction CreatePost() {\r\n  const navigate = useNavigate();\r\n  const { user, setUser } = useContext(UserContext);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      const localUser = localStorage.getItem(\"user\");\r\n      if (localUser) {\r\n        const foundUser = localUser;\r\n        setUser(foundUser);\r\n      } else {\r\n        navigate(\"/\", { replace: true });\r\n      }\r\n    } else {\r\n    }\r\n  }, [user]);\r\n\r\n  const submitForm = () => {\r\n    console.log({ title, image, text });\r\n\r\n    var client = new faunadb.Client({\r\n      secret: user,\r\n      domain: \"db.eu.fauna.com\",\r\n      scheme: \"https\",\r\n    });\r\n    client\r\n      .query(\r\n        Create(Collection(\"posts\"), {\r\n          data: {\r\n            owner: CurrentIdentity(),\r\n            title,\r\n            image,\r\n            content: text,\r\n          },\r\n        })\r\n      )\r\n      .then(returning => {\r\n        client.query(\r\n          Let(\r\n            {\r\n              ref: CurrentIdentity(),\r\n              doc: Get(Var(\"ref\")),\r\n              array: Select([\"data\", \"posts\"], Var(\"doc\")),\r\n            },\r\n            Update(Var(\"ref\"), {\r\n              data: { posts: Append([returning.ref], Var(\"array\")) },\r\n            })\r\n          )\r\n        );\r\n      });\r\n\r\n    setTitle(\"\");\r\n    setImage(\"\");\r\n    setText(\"\");\r\n  };\r\n\r\n  return (\r\n    <div id=\"create\">\r\n      <h1>Add posts here!</h1>\r\n      <form>\r\n        <Input\r\n          label=\"Title\"\r\n          value={title}\r\n          onChange={e => {\r\n            setTitle(e.target.value);\r\n          }}\r\n        />\r\n        <br />\r\n        <Input\r\n          label=\"Image Source\"\r\n          value={image}\r\n          onChange={e => {\r\n            setImage(e.target.value);\r\n          }}\r\n        />\r\n        {}\r\n        <div className=\"image-preview\"></div>\r\n        <img width=\"200\" src={image} />\r\n        <br />\r\n        <Input\r\n          label=\"Text\"\r\n          value={text}\r\n          onChange={e => {\r\n            setText(e.target.value);\r\n          }}\r\n        />\r\n        <br />\r\n        <Button label=\"Create Post\" handleClick={submitForm} />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatePost;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport Login from \"./Login\";\r\nimport Register from \"./Register\";\r\nimport { UserContext } from \"./components/UserContext\";\r\nimport Logout from \"./Logout\";\r\nimport About from \"./About\";\r\nimport Profile from \"./Profile\";\r\nimport CreatePost from \"./CreatePost\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\nfunction AppRouter() {\r\n  const [user, setUser] = useState(null);\r\n\r\n  const providerValue = useMemo(() => ({ user, setUser }), [user, setUser]);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <UserContext.Provider value={providerValue}>\r\n        <Navbar />\r\n        <Routes>\r\n          <Route path=\"/home\" element={<App />} />\r\n          <Route path=\"/about\" element={<About />} />\r\n          <Route exact path=\"/profile\" element={<Profile />} />\r\n          <Route exact path=\"/profile/:userId\" element={<Profile />} />\r\n          <Route path=\"/create\" element={<CreatePost />} />\r\n          <Route path=\"/logout\" element={<Logout />} />\r\n          <Route path=\"/login\" element={<Login />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route path=\"/\" exactly element={<Navigate to={\"/home\"} />} />\r\n        </Routes>\r\n      </UserContext.Provider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default AppRouter;\r\n","import \"./index.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport AppRouter from \"./AppRouter\";\n//import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppRouter />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}